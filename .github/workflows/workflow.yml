Главная > Блог > Web-разработка > Разное >
GitHub Actions. Начало работы, часть 2 из 2
19.06.2022

Теги: Git • GitHub • Linux • Web-разработка • Конфигурация • Сервер

Простой проект
Хорошо, общее представление о GitHub Actions у нас есть, теперь хотелось бы применить эти знания на практике. Давайте создадим небольшой проект, выложим его на GitHub, создадим для него workflow-файл, который будет запускать проверку кода линтером, выполнять сборку и деплоить на production сервер.

1. Деплой без GitHub
Итак, в директории проекта есть файл index.html и несколько css-файлов. Установлен npm-пакет browser-sync, чтобы сразу видеть изменения страницы при редактировании html и css файлов + пакеты для сборки проекта в директорию dist с минификацией html и css файлов. Файл package.json:

{
    "scripts": {
        "start": "browser-sync start --server src --no-notify --no-ui --cwd src --files index.html,css/**/*",
        "lint": "editorconfig-checker --exclude node_modules",
        "html": "html-minifier --remove-comments --collapse-whitespace --input-dir src --output-dir dist --file-ext html",
        "css": "postcss src/css/index.css --use postcss-import --use postcss-csso --no-map --output dist/css/index.css",
        "build": "npm run html && npm run css",
        "deploy": "rsync --archive --delete ./dist/ timeweb-hosting:/home/c/ca12345/github-workflow-example/public_html"
    },
    "devDependencies": {
        "browser-sync": "^2.27.10",
        "editorconfig-checker": "^4.0.2",
        "html-minifier": "^4.0.0",
        "postcss-cli": "^9.1.0",
        "postcss-csso": "^6.0.0",
        "postcss-import": "^14.1.0"
    }
}Копировать
Для деплоя проекта на хостинг TimeWeb используется утилита rsync. Строка timeweb-hosting определена в файле конфигурации ssh-клиента ~/.ssh/config.

Host timeweb-hosting
  User ca12345
  HostName tokmakov.msk.ru
  Port 22
  IdentityFile ~/.ssh/timeweb-hostingКопировать
Подключение к серверу с использованием ключей, которые предварительно надо создать и скопировать на сервер:

$ cd ~/.ssh/
$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/Evgeniy/.ssh/id_rsa): timeweb-hosting
Enter passphrase (empty for no passphrase): Enter
Enter same passphrase again: Enter
Your identification has been saved in timeweb-hosting
Your public key has been saved in timeweb-hosting.pub
The key fingerprint is:
SHA256:Lo+iUk+SHnxMwPfJkeMny6vrYDPpNxArrLqrWpjwNm8 Evgeniy@TKMCOMPКопировать
$ ssh-copy-id -i ~/.ssh/timeweb-hosting.pub ca12345@tokmakov.msk.ru
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/c/Users/Evgeniy/.ssh/timeweb-hosting.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
ca12345@tokmakov.msk.ru's password: пароль

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh ca12345@tokmakov.msk.ru"
and check to make sure that only the key(s) you wanted were added.Копировать
$ ssh timeweb-hosting

##########################
Welcome to TimeWeb server!
##########################

Last login: Sat Jun 18 11:35:54 2022 from 123.123.123.123Копировать
Для запуска линтера, сборки проекта, деплоя на сервер:

$ npm run lint
$ npm run build
$ nmp run deployКопировать
Внимательный читатель возможно уже заметил, что работа идет под Windows 10. Тогда откуда у меня утилита rsync? При установке Git для Windows устанавливается терминал, позволяющий работать с git из командной строки. Заодно из терминала можно запускать некоторые Linux-команды. Но можно расширить возможности терминала, добавив другие полезные утилиты. Как это сделать — читайте здесь.
2. GitHub Actions
Создаем новый репозиторий на GitHub, на локальном компьютере в директории проекта выполняем команды:

$ git init # создаем пустой репозиторий
$ git add --all  # добавляем все файлы проекта
$ git commit -m "Initial сommit" # первый коммитКопировать
Добавляем себе ссылку (pointer) на удаленный репозиторий:

$ git remote add origin git@github.com:tokmakov/github-workflow-example.gitКопировать
Теперь удаленный репозиторий доступен как origin:

$ git remote
originКопировать
Отправляем текущую ветку master (которая у нас сейчас всего одна) в удаленную ветку master репозитория origin:

$ git push origin masterКопировать
Настроим текущую ветку master на отслеживание удаленной ветки master:

$ git branch -u origin/master
Branch master set up to track remote branch master from origin.Копировать
Теперь самое интересное — создаем локально yml-файл и выкладываем его на GitHub:

name: Lint and deploy

on:
  push:

jobs:
  lint: # проверка кода линтером
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Lint new code
        run: |
          npm ci
          npm run lint

  deploy: # деплой на prod сервер
    # на сервер выкладываем только ветку master
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    # выкладываем, только если проверка успешна
    needs: [lint]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Build project
        run: |
          npm ci
          npm run build
      - name: Add ssh key
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.KEY }}" > ~/.ssh/key
          chmod 600 ~/.ssh/key
      - name: Deploy project
        env:
          options: ssh -i ~/.ssh/key -o StrictHostKeyChecking=no
        run: |
          rsync -e "$options" --archive --delete ./dist/ ${{ secrets.USER }}@${{ secrets.HOST }}:${{ secrets.WWW }}Копировать

$ git add .github/workflows/deploy.yml
$ git commit -m "Add workflow file deploy.yml"
$ git pushКопировать
Теперь, каждый раз, когда мы выполняем на своем компе команду git push, будет запускаться задание lint, которое проверит наш код. И если это задание отработает успешно — будет запущено задание deploy, которое соберет проект и выложит все файлы из директории dist на удаленный веб-сервер.

В workflow-файле используется контекст secrets — приватный ssh-ключ, имя пользователя, ip-адрес (домен) сервера, корневая директория веб-сервера. Так что все эти переменные контекста надо создать — на GitHub идем в Settings репозитория, слева находим ссылку Secrets, дальше Actions.



Чтобы получить приватный ключ, выполняем команду cat ~/.ssh/timeweb-hosting и копируем вывод в буфер обмена.

Кастомный action
В GitHub Marketplace есть отдельный раздел, посвященный Actions. Некоторые из них созданы известными компаниями, но бóльшая часть публикуется разработчиками. Но допустим, не удалось найти готовое решение для решения задачи. В таком случае можно воспользоваться инструкцией и содать кастомный action. Код action может написан на языке JavaScript или быть собран в виде Docker-образа.

Общий принцип создания action — нужен отдельный репозиторий, который будет содержать файл action.yml и все прочие файлы, необходимые для работы action.

name: Название action
author: Автор action
description: Описание action

inputs:
  # входные данные
outputs:
  # выходные данные

runs:
  # директивы запускаКопировать
Кроме того, action можно создать в отдельной директории внутри .github/actions. Эта директория должна содержать файл action.yml и все прочие файлы, необходимые для работы action. В этом случае обращение к этому action из workflow-файла будет иметь вид ./path/to/dir. Также необходимо скопировать файлы репозитрия внутрь временного сервера, где будет работать workflow.

|-- hello-world (repository)
|   |__ .github
|       └── workflows
|           └── my-first-workflow.yml
|       └── actions
|           |__ hello-world-action
|               └── action.yml Копировать
jobs:
  example:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/hello-world-actionКопировать
1. Action как Docker-образ
Наш кастомный action будет выполнять простой bash-скрипт. Этот скрипт будет обращаться к API сервиса JSON Placeholder и получать имя пользователя по идентификатору. Пользователей всего 10, идентификаторы — числа от 1 до 10.

https://jsonplaceholder.typicode.com/usersКопировать
[
  {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
      "street": "Kulas Light",
      "suite": "Apt. 556",
      "city": "Gwenborough",
      "zipcode": "92998-3874",
      "geo": {
        "lat": "-37.3159",
        "lng": "81.1496"
      }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
      "name": "Romaguera-Crona",
      "catchPhrase": "Multi-layered client-server neural-net",
      "bs": "harness real-time e-markets"
    }
  },
  {
    "id": 2,
    "name": "Ervin Howell",
    "username": "Antonette",
    "email": "Shanna@melissa.tv",
    "address": {
      "street": "Victor Plains",
      "suite": "Suite 879",
      "city": "Wisokyburgh",
      "zipcode": "90566-7771",
      "geo": {
        "lat": "-43.9509",
        "lng": "-34.4618"
      }
    },
    "phone": "010-692-6593 x09125",
    "website": "anastasia.net",
    "company": {
      "name": "Deckow-Crist",
      "catchPhrase": "Proactive didactic contingency",
      "bs": "synergize scalable supply-chains"
    }
  },
  {
    "id": 3,
    "name": "Clementine Bauch",
    "username": "Samantha",
    "email": "Nathan@yesenia.net",
    "address": {
      "street": "Douglas Extension",
      "suite": "Suite 847",
      "city": "McKenziehaven",
      "zipcode": "59590-4157",
      "geo": {
        "lat": "-68.6102",
        "lng": "-47.0653"
      }
    },
    "phone": "1-463-123-4447",
    "website": "ramiro.info",
    "company": {
      "name": "Romaguera-Jacobson",
      "catchPhrase": "Face to face bifurcated interface",
      "bs": "e-enable strategic applications"
    }
  },
  {
    "id": 4,
    "name": "Patricia Lebsack",
    "username": "Karianne",
    "email": "Julianne.OConner@kory.org",
    "address": {
      "street": "Hoeger Mall",
      "suite": "Apt. 692",
      "city": "South Elvis",
      "zipcode": "53919-4257",
      "geo": {
        "lat": "29.4572",
        "lng": "-164.2990"
      }
    },
    "phone": "493-170-9623 x156",
    "website": "kale.biz",
    "company": {
      "name": "Robel-Corkery",
      "catchPhrase": "Multi-tiered zero tolerance productivity",
      "bs": "transition cutting-edge web services"
    }
  },
  {
    "id": 5,
    "name": "Chelsey Dietrich",
    "username": "Kamren",
    "email": "Lucio_Hettinger@annie.ca",
    "address": {
      "street": "Skiles Walks",
      "suite": "Suite 351",
      "city": "Roscoeview",
      "zipcode": "33263",
      "geo": {
        "lat": "-31.8129",
        "lng": "62.5342"
      }
    },
    "phone": "(254)954-1289",
    "website": "demarco.info",
    "company": {
      "name": "Keebler LLC",
      "catchPhrase": "User-centric fault-tolerant solution",
      "bs": "revolutionize end-to-end systems"
    }
  },
  {
    "id": 6,
    "name": "Mrs. Dennis Schulist",
    "username": "Leopoldo_Corkery",
    "email": "Karley_Dach@jasper.info",
    "address": {
      "street": "Norberto Crossing",
      "suite": "Apt. 950",
      "city": "South Christy",
      "zipcode": "23505-1337",
      "geo": {
        "lat": "-71.4197",
        "lng": "71.7478"
      }
    },
    "phone": "1-477-935-8478 x6430",
    "website": "ola.org",
    "company": {
      "name": "Considine-Lockman",
      "catchPhrase": "Synchronised bottom-line interface",
      "bs": "e-enable innovative applications"
    }
  },
  {
    "id": 7,
    "name": "Kurtis Weissnat",
    "username": "Elwyn.Skiles",
    "email": "Telly.Hoeger@billy.biz",
    "address": {
      "street": "Rex Trail",
      "suite": "Suite 280",
      "city": "Howemouth",
      "zipcode": "58804-1099",
      "geo": {
        "lat": "24.8918",
        "lng": "21.8984"
      }
    },
    "phone": "210.067.6132",
    "website": "elvis.io",
    "company": {
      "name": "Johns Group",
      "catchPhrase": "Configurable multimedia task-force",
      "bs": "generate enterprise e-tailers"
    }
  },
  {
    "id": 8,
    "name": "Nicholas Runolfsdottir V",
    "username": "Maxime_Nienow",
    "email": "Sherwood@rosamond.me",
    "address": {
      "street": "Ellsworth Summit",
      "suite": "Suite 729",
      "city": "Aliyaview",
      "zipcode": "45169",
      "geo": {
        "lat": "-14.3990",
        "lng": "-120.7677"
      }
    },
    "phone": "586.493.6943 x140",
    "website": "jacynthe.com",
    "company": {
      "name": "Abernathy Group",
      "catchPhrase": "Implemented secondary concept",
      "bs": "e-enable extensible e-tailers"
    }
  },
  {
    "id": 9,
    "name": "Glenna Reichert",
    "username": "Delphine",
    "email": "Chaim_McDermott@dana.io",
    "address": {
      "street": "Dayna Park",
      "suite": "Suite 449",
      "city": "Bartholomebury",
      "zipcode": "76495-3109",
      "geo": {
        "lat": "24.6463",
        "lng": "-168.8889"
      }
    },
    "phone": "(775)976-6794 x41206",
    "website": "conrad.com",
    "company": {
      "name": "Yost and Sons",
      "catchPhrase": "Switchable contextually-based project",
      "bs": "aggregate real-time technologies"
    }
  },
  {
    "id": 10,
    "name": "Clementina DuBuque",
    "username": "Moriah.Stanton",
    "email": "Rey.Padberg@karina.biz",
    "address": {
      "street": "Kattie Turnpike",
      "suite": "Suite 198",
      "city": "Lebsackbury",
      "zipcode": "31428-2261",
      "geo": {
        "lat": "-38.2386",
        "lng": "57.2232"
      }
    },
    "phone": "024-648-3804",
    "website": "ambrose.net",
    "company": {
      "name": "Hoeger LLC",
      "catchPhrase": "Centralized empowering task-force",
      "bs": "target end-to-end models"
    }
  }
]Копировать
https://jsonplaceholder.typicode.com/users/5Копировать
{
  "id": 5,
  "name": "Chelsey Dietrich",
  "username": "Kamren",
  "email": "Lucio_Hettinger@annie.ca",
  "address": {
    "street": "Skiles Walks",
    "suite": "Suite 351",
    "city": "Roscoeview",
    "zipcode": "33263",
    "geo": {
      "lat": "-31.8129",
      "lng": "62.5342"
    }
  },
  "phone": "(254)954-1289",
  "website": "demarco.info",
  "company": {
    "name": "Keebler LLC",
    "catchPhrase": "User-centric fault-tolerant solution",
    "bs": "revolutionize end-to-end systems"
  }
}Копировать
Как всегда, создаем директорию проекта, размещаем в ней файлы Dockerfile, entrypoint.sh и action.yml:

# Base Docker image 
FROM alpine:latest

# installes required packages for our script
RUN apk add --no-cache \
  bash \
  ca-certificates \
  curl \
  jq

# copy bash script to filesystem alpine OS
COPY entrypoint.sh /entrypoint.sh

# change permission to execute our script
RUN chmod +x /entrypoint.sh

# execute bash script when container start
ENTRYPOINT ["/entrypoint.sh"]Копировать
#!/bin/bash
set -e

api_url="https://jsonplaceholder.typicode.com/users/${INPUT_USER_ID}"
echo $api_url

user_name=$(curl "${api_url}" | jq ".name")
echo $user_name

echo "::set-output name=user_name::$user_name"Копировать
name: Custom Github Docker Action
description: Call API and get user name

inputs:
  user_id:
    description: User ID, from 1 to 10
    required: true
    default: 1
outputs:
  user_name:
    description: Getted user name

runs:
  using: docker
  image: Dockerfile
  args:
    - ${{ inputs.user_id }}Копировать
Чтобы проверить наш новый action — создаем workflow-файл, который использует этот action в работе:

name: Test custom docker action

on: [push]

jobs:
  get_user_name_job:
    runs-on: ubuntu-latest
    # задаем значение output для этого задания
    outputs:
      user_name: ${{ steps.get_user_name_step.outputs.user_name }}
    steps:
      - name: Get user name
        id: get_user_name_step
        uses: tftlegal/custom-docker-action@main
        with:
          user_id: 5
      - name: Echo user name
        # получаем доступ к output предыдущего шага
        run: echo ${{ steps.get_user_name_step.outputs.user_name }}

  use_user_name_job:
    runs-on: ubuntu-latest
    needs: get_user_name_job
    steps:
